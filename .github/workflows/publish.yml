# Downloads ANIMA from https://anima.readthedocs.io/en/latest/install_binaries.html
# and wrap it into a pip-compatible package.
#
# To use: create a New Release at https://github.com/<path_to>/<this_repo>/releases/new
# and tag it with the tag of the matching ANIMA release you want, e.g. v4.1.0.

name: Publish Package

on:
  # publish from the Releases page:
  release:
    types: [published]

jobs:

  package:

    # Defining matrix for OS and Python
    strategy:

      # Ensure exhaustive testing of all scenarios to gather maximum amount of information
      fail-fast: false

      matrix:
        os: [ "windows-latest", "macos-latest", "ubuntu-latest" ]
        # TODO: anima publishes separate fedora builds. What should we do about these?

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        # this ensures that we can use the same shell syntax even on Windows
        shell: bash

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
        
    - name: Build
      run: |
          ./build-all.sh

    - name: Save build
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
          

  # pypi-publish doesn't support Windows; their workaround is to use a sepa actions/{upload,download}-artifact,
  # to bridge from the Windows/mac/Linux builds to a separate final Linux build
  # https://github.com/pypa/gh-action-pypi-publish/issues/54
  # > Besides, publishing from parallel uncoordinated workers is a bad idea™ —
  # > you wouldn't be happy when two job (say Win+Mac) publishes the wheels but
  # > Linux fails and you'll end up with a half-published release, would you?
  publish:
    needs:
    - package
    runs-on: ubuntu-latest

    steps:
    - name: Retrieve builds
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: Publish to Github
      uses: softprops/action-gh-release@v1
      with:
        files: 'dist/*'
        fail_on_unmatched_files: true
        prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'dev') }}
    
    - name: Publish to PyPI
      #if: false # DEBUG: disabled due to PyPI file size limits; setup.py will have to be reworked before this can be enabled.
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true # DEBUG

        user: __token__
        # staging:
        password: ${{ secrets.TEST_PYPI_PASSWORD }}
        repository_url: https://test.pypi.org/legacy/
        # production:
        #password: ${{ secrets.PYPI_PASSWORD }}
